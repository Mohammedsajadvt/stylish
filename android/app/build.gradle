plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

// If local properties file doesn't exist, use some default values if possible
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

// Update Android SDK versions here
// Android SDK levels defined here:
// https://developer.android.com/guide/topics/manifest/uses-sdk-element#ApiLevels
def flutterCompileSdkVersion = 34
def flutterMinSdkVersion = 23 
def flutterTargetSdkVersion = 34

kotlin {
    jvmToolchain(17) // Java version defined here
}

android {
    namespace 'com.example.stylish'

    compileSdk flutterCompileSdkVersion

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId 'com.example.stylish'
        minSdkVersion 23
        targetSdkVersion flutterTargetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
        debug {
            // This differentiated release from debug build, but it prevented debug build from
            // seeing subscription products. See also `android/app/src/debug/google-services.json`.
            //applicationIdSuffix '.debug'
            debuggable true
            minifyEnabled false
            shrinkResources false
        }

        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            minifyEnabled true
            shrinkResources true
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
    }
}

flutter {
    source '../..'
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.2'
}







